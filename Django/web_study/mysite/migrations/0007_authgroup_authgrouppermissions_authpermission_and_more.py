# Generated by Django 4.1.3 on 2022-12-06 04:26

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('mysite', '0006_alter_post_mainphoto'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MenuScoreAll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.TextField(blank=True, null=True)),
                ('restaurant', models.TextField(blank=True, null=True)),
                ('happy_winter', models.FloatField(blank=True, null=True)),
                ('happy_winter_snow', models.FloatField(blank=True, null=True)),
                ('happy_winter_rain', models.FloatField(blank=True, null=True)),
                ('happy_fall', models.FloatField(blank=True, null=True)),
                ('happy_fall_rain', models.FloatField(blank=True, null=True)),
                ('happy_summer', models.FloatField(blank=True, null=True)),
                ('happy_summer_rain', models.FloatField(blank=True, null=True)),
                ('happy_spring', models.FloatField(blank=True, null=True)),
                ('happy_spring_rain', models.FloatField(blank=True, null=True)),
                ('sad_spring_rain', models.FloatField(blank=True, null=True)),
                ('sad_spring', models.FloatField(blank=True, null=True)),
                ('sad_summer_rain', models.FloatField(blank=True, null=True)),
                ('sad_summer', models.FloatField(blank=True, null=True)),
                ('sad_fall_rain', models.FloatField(blank=True, null=True)),
                ('sad_fall', models.FloatField(blank=True, null=True)),
                ('sad_winter_rain', models.FloatField(blank=True, null=True)),
                ('sad_winter', models.FloatField(blank=True, null=True)),
                ('sad_winter_snow', models.FloatField(blank=True, null=True)),
                ('angry_winter', models.IntegerField(blank=True, null=True)),
                ('angry_winter_snow', models.IntegerField(blank=True, null=True)),
                ('angry_winter_rain', models.IntegerField(blank=True, null=True)),
                ('angry_fall', models.IntegerField(blank=True, null=True)),
                ('angry_fall_rain', models.IntegerField(blank=True, null=True)),
                ('angry_summer', models.IntegerField(blank=True, null=True)),
                ('angry_summer_rain', models.IntegerField(blank=True, null=True)),
                ('angry_spring', models.IntegerField(blank=True, null=True)),
                ('angry_spring_rain', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'menu_score_all',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MysiteAnswer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=200)),
                ('create_date', models.DateField()),
            ],
            options={
                'db_table': 'mysite_answer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MysitePost',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('postname', models.CharField(max_length=50)),
                ('contents', models.TextField()),
                ('mainphoto', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'mysite_post',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MysiteQuestion',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('subject', models.CharField(max_length=200)),
                ('create_date', models.DateTimeField()),
                ('content', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'mysite_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='resultall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant', models.CharField(max_length=300)),
                ('menu', models.CharField(max_length=300)),
                ('emotion', models.CharField(default='', max_length=300, null=True)),
                ('season', models.CharField(default='', max_length=300, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
    ]
